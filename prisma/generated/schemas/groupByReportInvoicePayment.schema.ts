import type { Prisma } from '@prisma/client';
import { z } from 'zod';
import { ReportInvoicePaymentWhereInputObjectSchema } from './objects/ReportInvoicePaymentWhereInput.schema';
import { ReportInvoicePaymentOrderByWithAggregationInputObjectSchema } from './objects/ReportInvoicePaymentOrderByWithAggregationInput.schema';
import { ReportInvoicePaymentScalarWhereWithAggregatesInputObjectSchema } from './objects/ReportInvoicePaymentScalarWhereWithAggregatesInput.schema';
import { ReportInvoicePaymentScalarFieldEnumSchema } from './enums/ReportInvoicePaymentScalarFieldEnum.schema';
import { ReportInvoicePaymentCountAggregateInputObjectSchema } from './objects/ReportInvoicePaymentCountAggregateInput.schema';
import { ReportInvoicePaymentMinAggregateInputObjectSchema } from './objects/ReportInvoicePaymentMinAggregateInput.schema';
import { ReportInvoicePaymentMaxAggregateInputObjectSchema } from './objects/ReportInvoicePaymentMaxAggregateInput.schema';
import { ReportInvoicePaymentAvgAggregateInputObjectSchema } from './objects/ReportInvoicePaymentAvgAggregateInput.schema';
import { ReportInvoicePaymentSumAggregateInputObjectSchema } from './objects/ReportInvoicePaymentSumAggregateInput.schema';

export const ReportInvoicePaymentGroupBySchema: z.ZodType<Prisma.ReportInvoicePaymentGroupByArgs> = z.object({ where: ReportInvoicePaymentWhereInputObjectSchema.optional(), orderBy: z.union([ReportInvoicePaymentOrderByWithAggregationInputObjectSchema, ReportInvoicePaymentOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ReportInvoicePaymentScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ReportInvoicePaymentScalarFieldEnumSchema), _count: z.union([ z.literal(true), ReportInvoicePaymentCountAggregateInputObjectSchema ]).optional(), _min: ReportInvoicePaymentMinAggregateInputObjectSchema.optional(), _max: ReportInvoicePaymentMaxAggregateInputObjectSchema.optional(), _avg: ReportInvoicePaymentAvgAggregateInputObjectSchema.optional(), _sum: ReportInvoicePaymentSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.ReportInvoicePaymentGroupByArgs>;

export const ReportInvoicePaymentGroupByZodSchema = z.object({ where: ReportInvoicePaymentWhereInputObjectSchema.optional(), orderBy: z.union([ReportInvoicePaymentOrderByWithAggregationInputObjectSchema, ReportInvoicePaymentOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ReportInvoicePaymentScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ReportInvoicePaymentScalarFieldEnumSchema), _count: z.union([ z.literal(true), ReportInvoicePaymentCountAggregateInputObjectSchema ]).optional(), _min: ReportInvoicePaymentMinAggregateInputObjectSchema.optional(), _max: ReportInvoicePaymentMaxAggregateInputObjectSchema.optional(), _avg: ReportInvoicePaymentAvgAggregateInputObjectSchema.optional(), _sum: ReportInvoicePaymentSumAggregateInputObjectSchema.optional() }).strict();