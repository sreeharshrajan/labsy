import type { Prisma } from '@prisma/client';
import { z } from 'zod';
import { ReportChangeLogWhereInputObjectSchema } from './objects/ReportChangeLogWhereInput.schema';
import { ReportChangeLogOrderByWithAggregationInputObjectSchema } from './objects/ReportChangeLogOrderByWithAggregationInput.schema';
import { ReportChangeLogScalarWhereWithAggregatesInputObjectSchema } from './objects/ReportChangeLogScalarWhereWithAggregatesInput.schema';
import { ReportChangeLogScalarFieldEnumSchema } from './enums/ReportChangeLogScalarFieldEnum.schema';
import { ReportChangeLogCountAggregateInputObjectSchema } from './objects/ReportChangeLogCountAggregateInput.schema';
import { ReportChangeLogMinAggregateInputObjectSchema } from './objects/ReportChangeLogMinAggregateInput.schema';
import { ReportChangeLogMaxAggregateInputObjectSchema } from './objects/ReportChangeLogMaxAggregateInput.schema';
import { ReportChangeLogAvgAggregateInputObjectSchema } from './objects/ReportChangeLogAvgAggregateInput.schema';
import { ReportChangeLogSumAggregateInputObjectSchema } from './objects/ReportChangeLogSumAggregateInput.schema';

export const ReportChangeLogGroupBySchema: z.ZodType<Prisma.ReportChangeLogGroupByArgs> = z.object({ where: ReportChangeLogWhereInputObjectSchema.optional(), orderBy: z.union([ReportChangeLogOrderByWithAggregationInputObjectSchema, ReportChangeLogOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ReportChangeLogScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ReportChangeLogScalarFieldEnumSchema), _count: z.union([ z.literal(true), ReportChangeLogCountAggregateInputObjectSchema ]).optional(), _min: ReportChangeLogMinAggregateInputObjectSchema.optional(), _max: ReportChangeLogMaxAggregateInputObjectSchema.optional(), _avg: ReportChangeLogAvgAggregateInputObjectSchema.optional(), _sum: ReportChangeLogSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.ReportChangeLogGroupByArgs>;

export const ReportChangeLogGroupByZodSchema = z.object({ where: ReportChangeLogWhereInputObjectSchema.optional(), orderBy: z.union([ReportChangeLogOrderByWithAggregationInputObjectSchema, ReportChangeLogOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ReportChangeLogScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ReportChangeLogScalarFieldEnumSchema), _count: z.union([ z.literal(true), ReportChangeLogCountAggregateInputObjectSchema ]).optional(), _min: ReportChangeLogMinAggregateInputObjectSchema.optional(), _max: ReportChangeLogMaxAggregateInputObjectSchema.optional(), _avg: ReportChangeLogAvgAggregateInputObjectSchema.optional(), _sum: ReportChangeLogSumAggregateInputObjectSchema.optional() }).strict();