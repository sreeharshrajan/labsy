import type { Prisma } from '@prisma/client';
import { z } from 'zod';
import { TenantPermissionWhereInputObjectSchema } from './objects/TenantPermissionWhereInput.schema';
import { TenantPermissionOrderByWithAggregationInputObjectSchema } from './objects/TenantPermissionOrderByWithAggregationInput.schema';
import { TenantPermissionScalarWhereWithAggregatesInputObjectSchema } from './objects/TenantPermissionScalarWhereWithAggregatesInput.schema';
import { TenantPermissionScalarFieldEnumSchema } from './enums/TenantPermissionScalarFieldEnum.schema';
import { TenantPermissionCountAggregateInputObjectSchema } from './objects/TenantPermissionCountAggregateInput.schema';
import { TenantPermissionMinAggregateInputObjectSchema } from './objects/TenantPermissionMinAggregateInput.schema';
import { TenantPermissionMaxAggregateInputObjectSchema } from './objects/TenantPermissionMaxAggregateInput.schema';

export const TenantPermissionGroupBySchema: z.ZodType<Prisma.TenantPermissionGroupByArgs> = z.object({ where: TenantPermissionWhereInputObjectSchema.optional(), orderBy: z.union([TenantPermissionOrderByWithAggregationInputObjectSchema, TenantPermissionOrderByWithAggregationInputObjectSchema.array()]).optional(), having: TenantPermissionScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(TenantPermissionScalarFieldEnumSchema), _count: z.union([ z.literal(true), TenantPermissionCountAggregateInputObjectSchema ]).optional(), _min: TenantPermissionMinAggregateInputObjectSchema.optional(), _max: TenantPermissionMaxAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.TenantPermissionGroupByArgs>;

export const TenantPermissionGroupByZodSchema = z.object({ where: TenantPermissionWhereInputObjectSchema.optional(), orderBy: z.union([TenantPermissionOrderByWithAggregationInputObjectSchema, TenantPermissionOrderByWithAggregationInputObjectSchema.array()]).optional(), having: TenantPermissionScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(TenantPermissionScalarFieldEnumSchema), _count: z.union([ z.literal(true), TenantPermissionCountAggregateInputObjectSchema ]).optional(), _min: TenantPermissionMinAggregateInputObjectSchema.optional(), _max: TenantPermissionMaxAggregateInputObjectSchema.optional() }).strict();